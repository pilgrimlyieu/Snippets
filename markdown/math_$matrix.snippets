global !p

from mdtex.scopes import math, inline_math, display_math

endglobal

# 矩阵片段
## 格式（?xxx? 代表 xxx 可省略）
### `option` + mm + ?`size`? + ?\`content`\.? + ?%`command`?
## 参数
### `option` {{{1
#### 'm': 无边框矩阵
#### 'p': 小括号边框矩阵
#### 'b': 中括号边框矩阵
#### 'B': 大括号边框矩阵
#### 'v': 行列式
#### 'V': 范数
## }}}1
### `size` {{{1
#### m×n 为 m 行 n 列
#### 默认 2×2 
#### 'n'  n×n
#### 'mn' m×n
## }}}1
### `content` {{{1
#### 预填充内容
#### 内容包含空格时需增加 '.' 明确内容结束
#### 包含空格的内容限制长度为 50，不包含空格内容可无限长
#### 保留关键词
##### '$': 或许可作为递推数字占位符
##### '@': TODO
##### '#': TODO
## }}}1
### `command` {{{1
#### 指令
##### 或许可指定递推数字的起始数字与间隔数字
##### 内置命令缩写以便快捷输入矩阵
##### 暂定以 '|' 为分界符
## }}}1

context "math()"
snippet mat "矩阵格式" w
${1|b,v,p,V,B,m|}mm$2\\$3\\.%$0
endsnippet

priority 1
context "math()"
snippet "(?a)\b([mpbBvV]mm\d)" "优化矩阵 Matrix Tip" Ar
`!p snip.rv = match.group(1)`
endsnippet

context "display_math()"
snippet "(?a)\b([mpbBvV])mm(\d{,2})((?:\\\S*\\|\\.{,50}\\\.)?)((?:%[a-zA-Z\d|,]*)?)" "行间矩阵 Display Matrix" r
endsnippet
